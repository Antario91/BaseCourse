<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:sws="http://www.springframework.org/schema/web-services"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
  http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services-2.0.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <import resource="DataSourceConfiguration.xml" />
    <import resource="HibernateSessionFactoryConfiguration.xml" />
    <import resource="TransactionConfiguration.xml" />

    <import resource="DomainExceptionsBeans.xml"/>

    <import resource="DomainServicesConfiguration.xml"/>

    <import resource="RepoBeansConfiguration.xml" />

    <import resource="EndpointBeansConfiguration.xml"/>

    <import resource="SpringWSExceptionConfiguration.xml"/>



    <context:component-scan base-package="webservice.endpoints"/>

    <sws:annotation-driven/>

    <bean id="CustomerWebService" class="org.springframework.ws.wsdl.wsdl11.DefaultWsdl11Definition" lazy-init="true">
        <property name="schemaCollection">
            <bean class="org.springframework.xml.xsd.commons.CommonsXsdSchemaCollection">
                <property name="inline" value="true" />
                <property name="xsds">
                    <list>
                        <value>/WEB-INF/XSDs/customer/CustomerDTOs.xsd</value>
                        <value>/WEB-INF/XSDs/customer/CustomerWebService.xsd</value>
                    </list>
                </property>
            </bean>
        </property>
        <property name="portTypeName" value="CustomerService"/>
        <property name="serviceName" value="CustomerWebService" />
        <property name="locationUri" value="/customer-web-service"/>
    </bean>

    <bean id="OrderWebService" class="org.springframework.ws.wsdl.wsdl11.DefaultWsdl11Definition" lazy-init="true">
        <property name="schemaCollection">
            <bean class="org.springframework.xml.xsd.commons.CommonsXsdSchemaCollection">
                <property name="inline" value="true" />
                <property name="xsds">
                    <list>
                        <value>/WEB-INF/XSDs/order/OrderDTOs.xsd</value>
                        <value>/WEB-INF/XSDs/order/OrderWebService.xsd</value>
                    </list>
                </property>
            </bean>
        </property>
        <property name="portTypeName" value="OrderService"/>
        <property name="serviceName" value="OrderWebService" />
        <property name="locationUri" value="/order-web-service"/>
    </bean>

    <bean id="ProductWebService" class="org.springframework.ws.wsdl.wsdl11.DefaultWsdl11Definition" lazy-init="true">
        <property name="schemaCollection">
            <bean class="org.springframework.xml.xsd.commons.CommonsXsdSchemaCollection">
                <property name="inline" value="true" />
                <property name="xsds">
                    <list>
                        <value>/WEB-INF/XSDs/product/ProductDTOs.xsd</value>
                        <value>/WEB-INF/XSDs/product/ProductWebService.xsd</value>
                    </list>
                </property>
            </bean>
        </property>
        <property name="portTypeName" value="ProductService"/>
        <property name="serviceName" value="ProductWebService" />
        <property name="locationUri" value="/product-web-service"/>
    </bean>

    <!-- Следующее определение Маршалера и анмаршалера. Но если не указывать этот Bean или даже удалить maven зависимость
     Spring-oxm, то все-равно в WEB-INF/lib ложиться чуть другая версия Spring-oxm. Скорее всего она добавляется из-за наличия
      maven зависимости Spring-ws -->
    <bean id="marshallerUnmarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="packagesToScan">
            <list>
                <value>webservice.dtos</value>
                <value>webservice.endpointrequestresponse</value>
            </list>
        </property>
    </bean>

</beans>

        <!-- Это контекст Spring. Имя ЭТОГО файла захардкодино. Оно состоит из [servlet name(определенное в web.xml)]-servlet.xml.
            Т.е. Если в web.xml имя сервлета "echo", то имя ЭТОГО файла(контекста Spring) - echo-servlet.xml -->